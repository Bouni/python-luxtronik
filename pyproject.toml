[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "luxtronik"
version = "0.0.0-dev"
license = {text = "MIT"}
readme = "README.md"
authors = [
  {name = "Bouni", email = "bouni-luxtronik@owee.de"}
]
description = "A luxtronik heatpump controller interface"
keywords    = ["heatpump", "luxtronik2"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Heatpump interface",
]
requires-python = ">=3.9.0"

[project.urls]
"Source Code" = "https://github.com/bouni/python-luxtronik/"
"Bug Reports" = "https://github.com/bouni/python-luxtronik/issues/"
"Docs: Dev"   = "https://github.com/bouni/python-luxtronik/"

[project.scripts]
luxtronik = "luxtronik.__main__:main"

[project.optional-dependencies]
dev = [
  "pytest",
  "autoflake",
  "black",
  "flake8-comprehensions",
  "flake8-docstrings",
  "flake8-noqa",
  "flake8",
  "isort",
  "pycodestyle",
  "pydocstyle",
  "pyflakes",
  "pyupgrade",
  "ruff",
  "yamllint"
]

[tool.setuptools]
platforms = ["any"]
zip-safe  = false
include-package-data = true

[tool.setuptools.packages.find]
include = ["luxtronik*"]

[tool.pylint.format]
max-line-length = 120 # Set a better line length limit, 80 chars is just archaic
max-attributes = 10 # Allow more than 7 attributes in a class

[tool.pylint.MASTER]
# Pickle collected data for later comparisons.
persistent = 'yes'

# When enabled, pylint would attempt to guess common misconfiguration and emit
# user-friendly hints instead of false-positive error messages.
suggestion-mode = 'yes'

[tool.pylint.messages_control]
disable = [
  "W0511", # Allow TODO comments
]

[tool.ruff]
line-length = 120
